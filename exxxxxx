1，搭建脚手架，脚手架自动帮忙提交一次代码到主分支。
2，git remote add origin git@github.com:lipenga/toutiao-m.git //添加一个远程仓库
3. git push --set-upstream origin master:master // 简写如下
3. git push -u origin master:master
4.安装vant postcss-pxtorem lib-flexible(设置rem基准值 根目录创建。postcssrc.js 复制粘贴)
5.搭建首页组件.描绘页面.
二.登陆
6.登陆成功。处理token,使用vuex,this.$store.commit('setUser', data.data),通过调用setUser，将token传到state: // window.localStorage.setItem('token', JSON.stringify(state.user))
7. state: { user: JSON.parse(window.localStorage.getItem('token')) },
8。封装本地储存模板，优化tuoken设置。setUser里设置token  setItem('token', JSON.stringify(state.user))。 state: { user: getItem('token') },
9.绘制layout公用模板。加路由出口，配置四个底部导航组件，并跳转。
10.绘制home页，顶部未登陆状态，点击回退到登录页。绘制顶部登陆状态。未登录状态，和公共部分。通过v-if和token是否存在控制登陆和未登陆部分的显示隐藏。
11.点击退出。清空token: this.$store.commit('setUser', null)
12.获取用户信息。发请求需要添加请求头。再设置请求拦截器request.interceptors.request.use(
  function(config) {
    const { user } = store.state
    if (user && user.token) {
      config.headers.Authorization = `Bearer ${user.token}`
    }
    return config
  },
  function(error) {
    return Promise.reject(error)
  }
)
13.渲染用户信息到已登陆页
14.绘制频道标签。获取频道信息，发请求并渲染。内容部分采用组件加载。配合循环:新建内容组件。在home页导入。并注册，在循环中使用，在新建的组件中prop接收动态循环项。
15.绘制list页面。用list组件。该组件有load方法loading须理解才能好的运用。
16.下拉刷新数据。采用van-pull-refresh组件.用fixed固定搜索框，标签页。再用padding-top固定列表视图.
17.用cell单元格组件，配合插槽，渲染标题内容和时间还有图片。
18.调整样式。通过返回的type值，如果封面三张图。就flex布局和v-if显示到下方。一张图，就显示到右边。再用day.js处理相对时间
19.点击汉堡按钮。出现弹出框，弹出框中插入新的组件。新的组件用宫格绘制单元格。
20.父组件通过动态绑定，把channel项传给子组件，子组件通过props接收父组件的item数据项并渲染到单元格.
21.父组件动态绑定active到插槽上，子组件继续props接收。并判断index===active，正确则加类名active.
22.获取所有频道列表，减去已经得到得标签列表，是剩余的推荐列表。循环这个计算属性。渲染到推荐频道上面。
23.点击按钮，添加到我的标签。直接添加到我的已有标签数组里。计算属性自动计算并减去这个标签。
24.通过标志符来控制关闭按钮的显示和隐藏。和if来判断编辑和完成按钮的切换。推荐按钮
25.关闭按钮的位置不好控制。从标签分离出来，通过插槽来控制他的位置和显隐。